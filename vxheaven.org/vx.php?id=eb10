<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title> Benny's Compression Engine for Win32 - Computer virus engines (VX heaven)</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<meta name="Author" content=""/>
<meta name="KeyWords" lang="en" content="computer virus, virus, virii,vx, компьютерные вирусы, вирус, вири"/>
<meta name="Description" content="Author's comments  let me introduce my second compression engine for Win32 enviroment (u can  find my first engine in Win32.Benny and Win98.Milennium). This engine  worx on &quot;compressin' bit groups&quot; base. When I started to write this stuff,  i wanted to write engine, that would work on Huffmann base. Then I decided  it's not needed to implement this complicated algorithm here, coz I wanna  be this engine small and effective.  Not only this is truth. This engine is very fast, very small (only 478 bytes)  and has implemented my special compression algorithm, that is simple and has  very, ehrm, let's call it &quot;interesting&quot; compression ratio X-D.  So how does it work ?  I said, this engine worx on &quot;compressin' bit groups&quot; base. What does it mean ? Bit group (as I call it) is group of two bits. U know, every byte has 8 bits.    Example:       byte 9Ah       group0 group1 group2 group3                 10011010  ===&amp;gt;   10     10     01     10    As u can see, every byte has 4 bit groups and I said, it compresses  bit groups. Heh, u think i'm crazy when im tryin' to compress  two bits, yeah :?)  This engine will (on the beginnin') calculate, which bit group has  the biggest count of repetency, which second biggest, etc...    Example:     group      count                 00  ===&amp;gt;  74                 01  ===&amp;gt;  32                 10  ===&amp;gt;  12                 11  ===&amp;gt;  26    That's not all. It has to sort items to know, which group has the biggest  count. I decided it's best to use &quot;bubble sort algorithm&quot;. Then there isn't  any problem to use &quot;our algorithm&quot;.  Look at this table, when in first column r sorted groups and in second  comlumn r &amp;lt;another&amp;gt; bits, which will represent new compressed data.    Sorted by count:       1.  ===&amp;gt;  1                         2.  ===&amp;gt;  00                         3.  ===&amp;gt;  010                         4.  ===&amp;gt;  011    Finally, engine will replace bit groups with these bits.  Gewd thing on this algorithm is that there aren't needed same bytes to have  good compression ratio, but only some bits.  So now u know whole secret of my compression algorithm. U also know, why  I said, it has &quot;interesting compression ratio&quot;. Look at the table and u will  see, what type of files can we strongly compress. They r both of binaries  and texts, but not every binaries or texts can be compressed as well as otherz.   We can compress some binaries again with the same or better ratio. Why ?  Imagine, u have file with 1000x 0x0s. After compression we have 125x 0xFFs, that  can be compressed again. Some files can be after compression (negative even -  file is bigger) compressed again with positive compression (file is smaller).  Heh, crazy, isn't it ? X-DDD.  How can I use BCE32 in my virus ?  BCE32 is placed in two procedures called BCE32_Compress and BCE32_Decompress.      BCE32_Compress:    Input state:          ESI register - pointer to data, which will be compressed      EDI register - pointer to memory, where will be placed compressed data      ECX register - number of bytes to compress + 1 (do not forget &quot;+ 1&quot; !)      EBX register - work memory (16 bytes)      EDX register - work memory (16 bytes). MUST NOT be same as EBX !        call BCE32_Compress    Output state:          EAX register - new size of compressed data      CF set, if negative compression      Other registers r preserved (except FLAGS)        BCE32_Decompress:    Input state:          ESI register - pointer to compressed data      EDI register - pointer to memory, where will be placed decompressed data      ECX register - number of bytes to decompress (EAX value returned by          BCE32_Compress) - 1 (do not forget &quot;- 1&quot; !)        call BCE32_Decompress    Output state:          All registers r preserved        WARNING: Be sure, u have enought memory for case of negative compression.  NOTE: U can compress (in some special cases) already compressed data.           For this purpose exists output parameters EAX and CF."/>
<script type="text/javascript">
//<![CDATA[
try{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:"cf",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:"/cdn-cgi/nexp/dok3v=1613a3a185/"},atok:"047a5bcbf67431883fc9ed25fba33612",petok:"b08647c29bd2d7b838d0b1e1f2c0b173bcc6c3e6-1498757915-1800",zone:"vxheaven.org",rocket:"a",apps:{}}];document.write('<script type="text/javascript" src="//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=85b614c0f6/cloudflare.min.js"><'+'\/script>');}}catch(e){};
//]]>
</script>
<link rel="icon" href="/favicon.ico" type="image/x-icon"/>
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"/>
<link rel="stylesheet" type="text/css" href="/style.css"/>
<script type="text/rocketscript" data-rocketsrc="https://apis.google.com/js/plusone.js">{"parsetags": "explicit"}</script>
</head>
<body bgcolor="#dbc8a0" text="#302000" link="#225599" vlink="#113366">
<div class="s1">
<div style="float:right;"><a href="/vx.php?tbs=1"><img src="/img/max.gif" alt="Maximize"/></a></div> <form id="lf" style="margin: 0; float: right;" method="get" action="/index.php"><input type="hidden" name="action" value="set"/><select name="lang" onchange="javascript:document.getElementById('lf').submit();"><option value="ru">Русский</option><option selected="selected" value="en">English</option><option value="ua">Українська</option><option value="de">Deutsch</option><option value="es">Español</option><option value="fr">Fran&ccedil;ais</option><option value="it">Italiano</option><option value="pl">Polski</option></select></form>
<div style="float: right;"><div id="plusone"></div></div>
<script type="text/rocketscript">gapi.plusone.render("plusone", {"size":"small","count":"true"});</script>
<div style="float: right;" class="addthis_toolbox addthis_default_style">
<script type="text/rocketscript">var addthis_config = { ui_click: true }</script>
<a style="text-decoration: none; font-size: 10pt;" href="/?action=addthis" class="addthis_button_compact">Bookmark</a>
<script type="text/rocketscript" data-rocketsrc="http://s7.addthis.com/js/250/addthis_widget.js#username=herm1t"></script>
</div>
<div style="float: right;">
<script type="text/rocketscript" data-rocketsrc="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>
<form action="/search.php" id="cse-search-box">
<input type="hidden" name="cx" value="002577580816726040001:z9_irkorydo"/>
<input type="hidden" name="cof" value="FORID:10"/>
<input type="hidden" name="ie" value="UTF-8"/>
<input type="text" name="q" size="12" value=" "/>
<input type="submit" name="sa" value="Search"/>
</form>
</div><h1><a href="/" style="text-decoration: none; color: #000000;">VX Heaven</a></h1>
<span class="nav"><a href="/lib/">Library</a> <a href="/vl.php">Collection</a> <a href="/src.php">Sources</a> <a href="/vx.php?id=eidx">Engines</a> <a href="/vx.php?id=tidx">Constructors</a> <a href="/vx.php?id=sidx">Simulators</a> <a href="/vx.php?id=uidx">Utilities</a> <a href="/links.php">Links</a> <a href="/donate.php" style="color: #706020" id="donate">Donate</a> <a href="/forum" style="text-decoration: underline;">Forum</a> </span><br clear="all"/>
</div>
<div class="s2"> [<a href="/vx.php?id=el12">Previous</a>] [<a href="/vx.php?id=eidx">Index</a>] [<a href="/vx.php?id=eb04">Next</a>] <h1> Benny's Compression Engine for Win32</h1><p><strong>Author: Benny</strong></p><p><strong>Author's comments</strong></p>
<p>let me introduce my second compression engine for Win32 enviroment (u can
find my first engine in Win32.Benny and Win98.Milennium). This engine
worx on "compressin' bit groups" base. When I started to write this stuff,
i wanted to write engine, that would work on Huffmann base. Then I decided
it's not needed to implement this complicated algorithm here, coz I wanna
be this engine small and effective.</p>
<p>Not only this is truth. This engine is very fast, very small (only 478 bytes)
and has implemented my special compression algorithm, that is simple and has
very, ehrm, let's call it "interesting" compression ratio X-D.</p>
<p><strong>So how does it work ?</strong></p>
<p>I said, this engine worx on "compressin' bit groups" base. What does it mean ? Bit group (as I call it) is group of two bits. U know, every byte has 8 bits.</p>
<pre>
Example:       byte 9Ah       group0 group1 group2 group3
               10011010  ===&gt;   10     10     01     10
</pre>
<p>As u can see, every byte has 4 bit groups and I said, it compresses
bit groups. Heh, u think i'm crazy when im tryin' to compress
two bits, yeah :?)</p>
<p>This engine will (on the beginnin') calculate, which bit group has
the biggest count of repetency, which second biggest, etc...</p>
<pre>
Example:     group      count
               00  ===&gt;  74
               01  ===&gt;  32
               10  ===&gt;  12
               11  ===&gt;  26
</pre>
<p>That's not all. It has to sort items to know, which group has the biggest
count. I decided it's best to use "bubble sort algorithm". Then there isn't
any problem to use "our algorithm".</p>
<p>Look at this table, when in first column r sorted groups and in second
comlumn r &lt;another&gt; bits, which will represent new compressed data.</p>
<pre>
Sorted by count:       1.  ===&gt;  1
                       2.  ===&gt;  00
                       3.  ===&gt;  010
                       4.  ===&gt;  011
</pre>
<p>Finally, engine will replace bit groups with these bits.
Gewd thing on this algorithm is that there aren't needed same bytes to have
good compression ratio, but only some bits.
So now u know whole secret of my compression algorithm. U also know, why
I said, it has "interesting compression ratio". Look at the table and u will
see, what type of files can we strongly compress. They r both of binaries
and texts, but not every binaries or texts can be compressed as well as otherz.
We can compress some binaries again with the same or better ratio. Why ?
Imagine, u have file with 1000x 0x0s. After compression we have 125x 0xFFs, that
can be compressed again. Some files can be after compression (negative even -
file is bigger) compressed again with positive compression (file is smaller).
Heh, crazy, isn't it ? X-DDD.</p>
<p><strong>How can I use BCE32 in my virus ?</strong></p>
<p>BCE32 is placed in two procedures called BCE32_Compress and BCE32_Decompress.</p>
<ol type="a">
<li>BCE32_Compress:
<p>Input state:</p>
<ol>
<li>ESI register - pointer to data, which will be compressed</li>
<li>EDI register - pointer to memory, where will be placed compressed data</li>
<li>ECX register - number of bytes to compress + 1 (do not forget "+ 1" !)</li>
<li>EBX register - work memory (16 bytes)</li>
<li>EDX register - work memory (16 bytes). MUST NOT be same as EBX !</li>
</ol>
<code>call BCE32_Compress</code>
<p>Output state:</p>
<ol>
<li>EAX register - new size of compressed data</li>
<li>CF set, if negative compression</li>
<li>Other registers r preserved (except FLAGS)</li>
</ol></li>
<li>BCE32_Decompress:
Input state:
<ol>
<li>ESI register - pointer to compressed data</li>
<li>EDI register - pointer to memory, where will be placed decompressed data</li>
<li>ECX register - number of bytes to decompress (EAX value returned by
BCE32_Compress) - 1 (do not forget "- 1" !)</li>
</ol>
<code>call BCE32_Decompress</code>
<p>Output state:</p>
<ol>
<li>All registers r preserved</li>
</ol></li>
</ol>
<p>WARNING: Be sure, u have enought memory for case of negative compression.</p>
<p>NOTE: U can compress (in some special cases) already compressed data.
For this purpose exists output parameters EAX and CF.</p>
<br clear="all"/><script type="text/rocketscript">var disqus_url = 'http://vxheaven.org/vx.php?id=eb10';</script><a href="/vx.php?id=eb10#disqus_thread">Comments</a><br/><div style="float:left;"><div style="float: left;"><strong>Download</strong></div><br clear="all"/><table cellspacing="0" cellpadding="0" border="1"><tr bgcolor="#aaa999"><th>&nbsp;</th><th>Filename</th><th>Size</th><th>Description</th><th>Date</th><th>&nbsp;</th></tr><tr bgcolor="#cccbbb"><td><form class="fr" method="post" action="/file.php"><input type="image" src="/img/dl.gif" alt="Download"/><input type="hidden" name="file" value="cGxlL2JjZTMyLnppcA@@"/></form></td><td><a name="f1473"></a><small><a href="/dl/ple/bce32.zip">bce32.zip</a></small></td><td><small>3990</small></td><td><small>BCE32</small></td><td><small>May 1999</small></td><td><small style="float: right; font-family: fixed;">MD5 sum 67c23353e5ad3fb29773f2d144eb98d8</small></td></tr></table></div><br clear="all"/><br/><div class="s2">
<div id="disqus_thread"></div>
<script type="text/rocketscript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'vxheaven'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript></div>
<div><small>By accessing, viewing, downloading or otherwise using this content you agree to be bound by the <a href="/agreement.php">Terms of Use</a>!</small> <small>vxheaven.org aka vx.netlux.org</small></div>
<div style="margin-top: 2px; float: left;" class="adsapeu">
<script type="text/rocketscript">
<!--
var _acic={dataProvider:10};(function(){var e=document.createElement("script");e.type="text/javascript";e.async=true;e.src="//www.acint.net/aci.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})()
//-->
</script>
</div>
<script data-rocketsrc="http://www.google-analytics.com/urchin.js" type="text/rocketscript"></script><script type="text/rocketscript">try { _uacct = "UA-590608-1"; urchinTracker(); } catch(err) {}</script>
<div style="display: none;"><a href="/vx.php?lang=de&amp;id=eb10">de</a><a href="/vx.php?lang=en&amp;id=eb10">en</a><a href="/vx.php?lang=es&amp;id=eb10">es</a><a href="/vx.php?lang=it&amp;id=eb10">it</a><a href="/vx.php?lang=fr&amp;id=eb10">fr</a><a href="/vx.php?lang=pl&amp;id=eb10">pl</a><a href="/vx.php?lang=ru&amp;id=eb10">ru</a><a href="/vx.php?lang=ua&amp;id=eb10">ua</a></div>
</body>
</html>
