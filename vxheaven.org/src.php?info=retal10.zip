<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Retaliation - Virus for Linux by JPanic (VX heaven)</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<meta name="Author" content=""/>
<meta name="KeyWords" lang="en" content="computer virus, virus, virii,vx, компьютерные вирусы, вирус, вири"/>
<meta name="Description" content="VX Heaven site is dedicted to providing information about computer viruses (virii) and web space for virus authors and groups"/>
<script type="text/javascript">
//<![CDATA[
try{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:"cf",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:"/cdn-cgi/nexp/dok3v=1613a3a185/"},atok:"047a5bcbf67431883fc9ed25fba33612",petok:"f47eeff27785cda58f624b5de5f56edf2eaf87d8-1498755333-1800",zone:"vxheaven.org",rocket:"a",apps:{}}];document.write('<script type="text/javascript" src="//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=85b614c0f6/cloudflare.min.js"><'+'\/script>');}}catch(e){};
//]]>
</script>
<link rel="icon" href="/favicon.ico" type="image/x-icon"/>
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"/><script type="text/rocketscript">	var s = 0;
	function soundex() {
		if (document.getElementById) {
			var snd = document.getElementById("snd");
			var frm = document.getElementById("sfrm");
			s = 1 - s;
			snd.src = "/img/sound_" + (s ? "on" : "off") + ".gif";
			frm.soundex.value = s;
		}
	}
	function do_img() {
		if (document.getElementById)
			document.write('<' + 'img id="snd" class="va" src="/img/sound_' + (s ? 'on' : 'off') + '.gif" onclick="soundex();" alt="" /' + '>');
	}</script>
<link rel="stylesheet" type="text/css" href="/style.css"/><style type="text/css">.va{vertical-align:middle;}</style>
<script type="text/rocketscript" data-rocketsrc="https://apis.google.com/js/plusone.js">{"parsetags": "explicit"}</script>
</head>
<body bgcolor="#dbc8a0" text="#302000" link="#225599" vlink="#113366">
<div class="s1">
<div style="float:right;"><a href="/src.php?tbs=1"><img src="/img/max.gif" alt="Maximize"/></a></div> <form id="lf" style="margin: 0; float: right;" method="get" action="/index.php"><input type="hidden" name="action" value="set"/><select name="lang" onchange="javascript:document.getElementById('lf').submit();"><option value="ru">Русский</option><option selected="selected" value="en">English</option><option value="ua">Українська</option><option value="de">Deutsch</option><option value="es">Español</option><option value="fr">Fran&ccedil;ais</option><option value="it">Italiano</option><option value="pl">Polski</option></select></form>
<div style="float: right;"><div id="plusone"></div></div>
<script type="text/rocketscript">gapi.plusone.render("plusone", {"size":"small","count":"true"});</script>
<div style="float: right;" class="addthis_toolbox addthis_default_style">
<script type="text/rocketscript">var addthis_config = { ui_click: true }</script>
<a style="text-decoration: none; font-size: 10pt;" href="/?action=addthis" class="addthis_button_compact">Bookmark</a>
<script type="text/rocketscript" data-rocketsrc="http://s7.addthis.com/js/250/addthis_widget.js#username=herm1t"></script>
</div>
<div style="float: right;">
<script type="text/rocketscript" data-rocketsrc="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>
<form action="/search.php" id="cse-search-box">
<input type="hidden" name="cx" value="002577580816726040001:z9_irkorydo"/>
<input type="hidden" name="cof" value="FORID:10"/>
<input type="hidden" name="ie" value="UTF-8"/>
<input type="text" name="q" size="12" value=" "/>
<input type="submit" name="sa" value="Search"/>
</form>
</div><h1><a href="/" style="text-decoration: none; color: #000000;">VX Heaven</a></h1>
<span class="nav"><a href="/lib/">Library</a> <a href="/vl.php">Collection</a> <a href="/src.php">Sources</a> <a href="/vx.php?id=eidx">Engines</a> <a href="/vx.php?id=tidx">Constructors</a> <a href="/vx.php?id=sidx">Simulators</a> <a href="/vx.php?id=uidx">Utilities</a> <a href="/links.php">Links</a> <a href="/donate.php" style="color: #706020" id="donate">Donate</a> <a href="/forum" style="text-decoration: underline;">Forum</a> </span><br clear="all"/>
</div>
<div class="s2"><h1>Source code of computer viruses</h1><h2>Retaliation - Virus for Linux by JPanic</h2><p><em>Virus for Linux</em></p><p><strong>JPanic</strong><br/><small><a href="/src.php?author=JPanic">Show all viruses by this author</a></small></p><p>2014-00-00</p><a href="#disqus_thread">Comments</a><br/><form class="fr" method="post" action="/file.php"><input type="image" src="/img/dl.gif" alt="Download"/><input type="hidden" name="file" value="c3JjL3JldGFsMTAuemlw"/></form> Download retal10.zip (64528 bytes) or <a href="/src_view.php?file=retal10.zip">browse online</a><ul>
<li>Infection Methods
<ul>
<li>Executable - PT_NOTE Phdr is changed to PT_LOAD, virus is appended, e_entry is changed.</li>
<li>Prelink Executable - In the case of executables processed by 'prelink' tool - PT_NOTE is changed to PT_LOAD, a new nameless Shdr is created for the virus, '.gnu.prelink_undo' section is updated. Thus, the virus can survive a 'prelink -u' (undo).</li>
<li>Relocatables - Relocatable (object) files are infected too. The decryptor is inserted in '.text', the encrypted virus body in '.data' and some variables for the decryptor in '.bss'. Execution is hooked by redirecting random 'FUNCTION' type symbol to virus decryptor. Thus an infected executable can be created with the virus in the middle of the file by linking an infected relocatable.</li>
</ul></li>
<li>Infection Vectors - The virus is both direct-action and per-process resident. Upon execution the virus first goes for certain files in /bin and /usr/bin. Then all of '.' and then randomly /bin or /usr/bin. Since infection is set, a 'timeout' value of 5-seconds is set. Upon timeout the direct-action infection process ceases and control is returned to the host. See section on 'hooks' for per-process residency.</li>
<li>Hooks - Certain library functions are hooked in .got (global
offset table) - 13 in all: __lxstat64, __openat_2,
__xstat64, __lxstat, __xstat, fopen, fopen64, open,
open64, bfd_openr, execve, signal and sigaction. First
11 functions are hooked to catch files to infect. Last
two (signal and sigaction) are to stop the host
replacing the virus SIGILL and SIGTRAP handlers.</li>
<li>EBLOCKS - The virus is divided into about 250 independent
'EBLOCKS'. Upon 'BEGIN_EBLOCK' the block is decrypted
and its code is entered. Upon 'END_EBLOCK' the block is
re-encrypted. This algorithm is recursive. The virus
stores the 32-bit seed used to encrypt the EBLOCK and
reuses it to generate the same decryptor for the poly
engine when it is time to decrypt.</li>
<li>Preservation of Infection - The virus makes some attempts to make
disinfection of infected executables
difficult.
<ul>
<li>Encrypting '.data.' - The virus will encrypt the entire
'.data' section with 128-bit BTEA at infection
time and decrypt it before returning control to
the host at run time.</li>
<li>Patching .text - The virus will scan .text for certain 4-
byte sequences (CMP RAX,-1 and
PUSH RBP|MOV RBP,RSP) and patch them with
illegal opcodes. Before returing control to the
host a SIGILL handler is installed to catch the
illegal opcode and emulate the original
instruction.</li>
<li>Random Decoding Algorithm (RDA) - 15-bit Random Decoding
Algorithm is used to encrypt data necessary for
restoring/disinfecting host. The item of data is
encrypted with random key and a CRC32 of the
decrypted data is stored. Upon decryption the
poly engine is called with sequential seeds
unti the CRC32 matches the decrypted data.</li>
</ul></li>
<li>Anti-Analysis Methods - The virus makes certain attempts to hamper analysis:
<ul>
<li>The Linux installation must be atleast 10 days old.</li>
<li>System uptime must be atleast 17 minutes.</li>
<li>If PTRACE is detected the virus will either choose to exit
gracefully or enter an infinite loop of random syscalls.</li>
<li>See sections on Goat File Checks, Anti-Debug code.</li>
</ul></li>
<li>Anti Goat File Checks - The virus makes four (4) attempts to avoid
'goat' files being created to generate samples:
<ul>
<li>Executables less than 180 minutes old are not infected.</li>
<li>Files with the same CRC32 of .text, 3 times in a row, will
cause the virus to 'shutdown' and stop infecting.</li>
<li>Files with constant file size of file size increasing/
decreasing at a constant rate 4 times in a row will also cause
the virus to 'shutdown' and stop infecting.</li>
<li>Files with sequential filenames (filename increasing/
decreasing by constant amount) 4 times in a row cause the virus
to 'shutdown' and stop infecting.</li>
</ul></li>
<li>Anti-Debug Code - Several measures are taken to make debugging harder:
<ul>
<li>Anti-Ptrace code.</li>
<li>SIGTRAP handler treats 0xCC (INT3) as a 'call' instruction
with 16-bit displacement. i.e. db 0CCh, dw offset_to_function.</li>
<li>SIGTRAP handles treats 0xF1 (BPICE, INT1) as a 'syscall al'
instruction: i.e. db 0F1h, db syscall_number</li>
<li>SIGILL handler treats illegal opcode 0x27 as 'BEGIN_EBLOCK'
and illegal opcode 0x2F as 'END_EBLOCK'.</li>
<li>Several (60+) sub-routines check for their return address
being patched with a breakpoint (0xCC) or for TF being set or
for the next 'PUSHF' being patched. In such a case the virus
'trashes' itself by overwriting itself in memory with random
data.</li>
<li>The above mentioned check is used as part of the key for
EBLOCKS and RDA - so it can't be patched.</li>
</ul></li>
<li>Polymorphic engine:
<ul>
<li>8/16/32-bit decryptors.</li>
<li>Forwards/Backwards.</li>
<li>1 or 2 pointer registers.</li>
<li>16/32/64-bit counter register.</li>
<li>inc/dec/add/sub of counter for loop.</li>
<li>JNZ/JS/JNS/JNC/JG/JL/JGE/JNO/JC loop types.</li>
<li>99% of x64 integer instructions generated as junk.</li>
<li>Junk Memory Reads (.data/.rodata/.bss/stack).</li>
<li>Junk Memory Writes (.bss/stack)</li>
<li>Recursive Junk Loops/If[Else]/Call Sub constructs.</li>
<li>Calls to junk sub-routines may be forwards or backwards.</li>
<li>Generation of ~90 Linux x64 syscalls as Junk, including check
for return of correct error code.</li>
</ul></li>
<li>Activation Routines:
<ul>
<li>The virus displays a message to STDOUT when the infection
inside the files is 90+ days old and the file is on the machine
it was originally infected on.</li>
<li>The virus also displays 'error' messages on the following situations:
<ul>
<li>SIGTRAP handler receives a trap not generated
by the virus.</li>
<li>SIGILL handler receives an illegal opcoded
that is not a part of the virus routines.</li>
<li>RDA routine fails to find decryption key (this
should never happen).</li>
</ul></li>
</ul></li>
</ul>
<script type="text/rocketscript">var disqus_url = 'http://vxheaven.org/src.php?info=retal10.zip';</script></div><br/><div class="s2">
<div id="disqus_thread"></div>
<script type="text/rocketscript">
        /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
        var disqus_shortname = 'vxheaven'; // required: replace example with your forum shortname

        /* * * DON'T EDIT BELOW THIS LINE * * */
        (function() {
            var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
            dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
            (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
        })();
    </script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript></div>
<div><small>By accessing, viewing, downloading or otherwise using this content you agree to be bound by the <a href="/agreement.php">Terms of Use</a>!</small> <small>vxheaven.org aka vx.netlux.org</small></div>
<div style="margin-top: 2px; float: left;" class="adsapeu">
<script type="text/rocketscript">
<!--
var _acic={dataProvider:10};(function(){var e=document.createElement("script");e.type="text/javascript";e.async=true;e.src="//www.acint.net/aci.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})()
//-->
</script>
</div>
<script data-rocketsrc="http://www.google-analytics.com/urchin.js" type="text/rocketscript"></script><script type="text/rocketscript">try { _uacct = "UA-590608-1"; urchinTracker(); } catch(err) {}</script>
<div style="display: none;"></div>
</body>
</html>
