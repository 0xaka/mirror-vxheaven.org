<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Library Anti-virus general (VX heaven)</title>
<meta http-equiv="content-type" content="text/html; charset=utf-8"/>
<meta name="Author" content=""/>
<meta name="KeyWords" lang="en" content="computer virus, virus, virii,vx, компьютерные вирусы, вирус, вири"/>
<meta name="Description" content="VX Heaven site is dedicted to providing information about computer viruses (virii) and web space for virus authors and groups"/>
<script type="text/javascript">
//<![CDATA[
try{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:"cf",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:"/cdn-cgi/nexp/dok3v=1613a3a185/"},atok:"047a5bcbf67431883fc9ed25fba33612",petok:"ce0fe56e4537f9a0da8e0004071d407abe8866de-1498758334-1800",zone:"vxheaven.org",rocket:"a",apps:{}}];document.write('<script type="text/javascript" src="//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=85b614c0f6/cloudflare.min.js"><'+'\/script>');}}catch(e){};
//]]>
</script>
<link rel="icon" href="/favicon.ico" type="image/x-icon"/>
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon"/>
<link rel="stylesheet" type="text/css" href="/style.css"/>
<script type="text/rocketscript" data-rocketsrc="https://apis.google.com/js/plusone.js">{"parsetags": "explicit"}</script>
</head>
<body bgcolor="#dbc8a0" text="#302000" link="#225599" vlink="#113366">
<div class="s1">
<h1><a href="/" style="text-decoration: none; color: #000000;">VX Heaven</a></h1>
<span class="nav"><a href="/lib/">Library</a> <a href="/vl.php">Collection</a> <a href="/src.php">Sources</a> <a href="/vx.php?id=eidx">Engines</a> <a href="/vx.php?id=tidx">Constructors</a> <a href="/vx.php?id=sidx">Simulators</a> <a href="/vx.php?id=uidx">Utilities</a> <a href="/links.php">Links</a> <a href="/donate.php" style="color: #706020" id="donate">Donate</a> <a href="/forum" style="text-decoration: underline;">Forum</a> </span><br clear="all"/>
</div>
<div><div style="float:right;"><a href="/lib/index.php?tbs=0"><img src="/img/min.gif" alt="Minimize"/></a></div> <form id="lf" style="margin: 0; float: right;" method="get" action="/index.php"><input type="hidden" name="action" value="set"/><select name="lang" onchange="javascript:document.getElementById('lf').submit();"><option value="ru">Русский</option><option selected="selected" value="en">English</option><option value="ua">Українська</option><option value="de">Deutsch</option><option value="es">Español</option><option value="fr">Fran&ccedil;ais</option><option value="it">Italiano</option><option value="pl">Polski</option></select></form>
<div style="float: right;"><div id="plusone"></div></div>
<script type="text/rocketscript">gapi.plusone.render("plusone", {"size":"small","count":"true"});</script>
<div style="float: right;" class="addthis_toolbox addthis_default_style">
<script type="text/rocketscript">var addthis_config = { ui_click: true }</script>
<a style="text-decoration: none; font-size: 10pt;" href="/?action=addthis" class="addthis_button_compact">Bookmark</a>
<script type="text/rocketscript" data-rocketsrc="http://s7.addthis.com/js/250/addthis_widget.js#username=herm1t"></script>
</div>
<div style="float: left;">
<script type="text/rocketscript" data-rocketsrc="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>
<form action="/search.php" id="cse-search-box">
<input type="hidden" name="cx" value="002577580816726040001:z9_irkorydo"/>
<input type="hidden" name="cof" value="FORID:10"/>
<input type="hidden" name="ie" value="UTF-8"/>
<input type="text" name="q" size="32" value=" "/>
<input type="submit" name="sa" value="Search"/>
</form>
</div><br clear="both"/></div>
<div class="s2">[<a href="/lib/?lang=de&amp;index=AV">Deutsch</a>][English][<a href="/lib/?lang=es&amp;index=AV">Español</a>][<a href="/lib/?lang=it&amp;index=AV">Italiano</a>][<a href="/lib/?lang=fr&amp;index=AV">Fran&ccedil;ais</a>][<a href="/lib/?lang=pl&amp;index=AV">Polski</a>][<a href="/lib/?lang=ru&amp;index=AV">Русский</a>][<a href="/lib/?lang=ua&amp;index=AV">Українська</a>]<br/><div style="float: left; margin-top: .5em;"><div class="hp"><a href="/lib/rnd00.html">Random article</a><br/><a href="/lib/?lang=en">Index</a><br/></span><a href="/lib/?index=Author&lang=en">Index by author</a><br/><a href="/lib/?index=Title&lang=en">Index by title</a><br/><a href="/lib/?index=Date&lang=en">Index by date</a><br/><a href="/lib/?index=Top&lang=en">Top 20 articles</a><br/><a href="/vx.php?id=zidx">Virus magazines</a><br/><a href="/vx.php?id=gidx">Virus groups</a><br/><a href="/timeline.php">Computer viruses timeline</a><br/><a href="/lib/static/textfiles.com/virus/">textfiles.com</a></div><div class="hp"><div style="background-color: #bbbaaa; width: 100%; font-size: 10pt; text-decoration: underline;">Top 5 articles</div><span class="small">P. Ször &laquo;<a name="aps00" href="/lib/aps00.html">The Art of Computer Virus Research and Defense</a>&raquo; (89106)<br/></span><span class="small">D. Harley, R. Slade, U. Gattiker &laquo;<a name="ars08" href="/lib/ars08.html">Viruses Revealed: Understanding and Counter Malicious Software</a>&raquo; (61097)<br/></span><span class="small">J. Aycock &laquo;<a name="mja01" href="/lib/mja01.html">Computer Viruses and Malware</a>&raquo; (59545)<br/></span><span class="small">A. Solomon &laquo;<a name="aas10" href="/lib/aas10.html">All About Viruses</a>&raquo; (20840)<br/></span><span class="small">J. Hruska &laquo;<a name="ajh00" href="/lib/ajh00.html">Computer viruses and anti-virus warfare</a>&raquo; (18630)<br/></span></div><div class="hp"><div style="background-color: #bbbaaa; width: 100%; font-size: 10pt; text-decoration: underline;">Most cited</div><span class="small">F. Cohen &laquo;<a name="afc01" href="/lib/afc01.html">Computer Viruses - Theory and Experiments</a>&raquo; (<a href="/lib/?ci=afc01">73</a>)<br/></span><span class="small">F. Cohen &laquo;<a name="afc13" href="/lib/afc13.html">A Short Course on Computer Viruses</a>&raquo; (<a href="/lib/?ci=afc13">41</a>)<br/></span><span class="small">J. Shoch, J. Hupp &laquo;<a name="ajm01" href="/lib/ajm01.html">The "Worm" Programs - Early Experience with a Distributed Computation</a>&raquo; (<a href="/lib/?ci=ajm01">35</a>)<br/></span><span class="small">J. Brunner &laquo;<a name="mjb01" href="/lib/mjb01.html">The Shockwave Rider</a>&raquo; (<a href="/lib/?ci=mjb01">27</a>)<br/></span><span class="small">K. Thompson &laquo;<a name="mkt00" href="/lib/mkt00.html">Reflections on Trusting Trust</a>&raquo; (<a href="/lib/?ci=mkt00">27</a>)<br/></span></div></div><div style="float: left;"><h1>Library: Anti-virus general</h1><div class="lc">@<a href="/lib/?index=AA&lang=en">Anti anti-viruses, anti-debugging</a> (25)<br/>@<a href="/lib/?index=AR&lang=en">Anti-virus programs</a> (7)<br/>@<a href="/lib/?index=AN&lang=en">Analysis of the particular viruses</a> (78)<br/>@<a href="/lib/?index=AI&lang=en">Artificial intelligence and evolution</a> (20)<br/>@<a href="/lib/?index=AT&lang=en">Anti-virus technology</a> (24)<br/>@<u>Anti-virus general</u><br/>@<a href="/lib/?index=CO&lang=en">Collecting and Trading</a> (3)<br/>@<a href="/lib/?index=CR&lang=en">Cryptography and Cryptovirology</a> (10)<br/>@<a href="/lib/?index=DO&lang=en">MS-DOS specific</a> (42)<br/>@<a href="/lib/?index=EP&lang=en">Computer Epidemiology</a> (11)<br/>@<a href="/lib/?index=FI&lang=en">Fiction</a> (13)<br/>@<a href="/lib/?index=GV&lang=en">Good viruses and worms</a> (10)<br/>@<a href="/lib/?index=IV&lang=en">Interviews with VXers and AVers</a> (75)<br/>@<a href="/lib/?index=IW&lang=en">Information warfare</a> (5)<br/>@<a href="/lib/?index=IM&lang=en">Computer Immunology</a> (8)<br/>@<a href="/lib/?index=HI&lang=en">History</a> (52)<br/>@<a href="/lib/?index=LA&lang=en">Laws</a> (18)<br/>@<a href="/lib/?index=MA&lang=en">Macro and script viruses</a> (74)<br/>@<a href="/lib/?index=ME&lang=en">Metamorphism</a> (18)<br/>@<a href="/lib/?index=OO&lang=en">Different OS's - MacOS, MenuetOS, ...</a> (3)<br/>@<a href="/lib/?index=OT&lang=en">Trojans, Hoaxes, Hypes, Spyware</a> (4)<br/>@<a href="/lib/?index=TH&lang=en">Theory, models and definitions</a> (36)<br/>@<a href="/lib/?index=PO&lang=en">Polymorphism</a> (27)<br/>@<a href="/lib/?index=PR&lang=en">Predictions, Prognosis, Trends...</a> (14)<br/>@<a href="/lib/?index=PS&lang=en">Scene, Psychological, Ethical, Cultural and Social aspects</a> (110)<br/>@<a href="/lib/?index=SR&lang=en">Self-reproduction</a> (4)<br/>@<a href="/lib/?index=UN&lang=en">UNIX and clones specific</a> (32)<br/>@<a href="/lib/?index=VT&lang=en">Virus technology</a> (69)<br/>@<a href="/lib/?index=VX&lang=en">Virus general</a> (26)<br/>@<a href="/lib/?index=WO&lang=en">Computer worms and botnets</a> (23)<br/>@<a href="/lib/?index=WI&lang=en">Windows specific</a> (55)<br/>@<a href="/lib/?index=RK&lang=en">Rootkits</a> (2)<br/></div></div><br clear="left"/><div class="l1"><em>uknown</em></div>&laquo;<a name="aeu01" href="/lib/aeu01.html">Edinburgh University PC Virus Review 1992</a>&raquo; <small>28.12Kb</small> <span class="note">11601 hits</span><br/><small> (1992)</small><blockquote></blockquote>&laquo;<a name="aeu02" href="/lib/aeu02.html">Edinburgh University PC Virus Review 1993</a>&raquo; <small>27.98Kb</small> <span class="note">8765 hits</span><br/><small> (1993)</small><blockquote>Throughout 1993, PC computer viruses continued to make their presence felt at Edinburgh University. Last years review revolved around what generalisations could be drawn about PC viruses using the apparently random sample which were identified here. The following areas of reference were used: date of origin, country of origin, classification, payload and aliases. I concluded then that most infections were caused by common viruses from a variety of countries, which incorporated similar techniques in respect of their infection mechanisms and their payloads. Most had acquired several aliases and may destroy data either through careless programming or by design. (Scobie, 1993) This years review will compare the new sample along similar lines, in order to see whether such generalisations continue to provide a useful framework for the study of this phenomenon and whether this conclusion is valid for the latest influx of viruses.</blockquote>&laquo;<a name="aeu03" href="/lib/aeu03.html">Edinburgh University PC Virus Review 1994</a>&raquo; <small>14.29Kb</small> <span class="note">8030 hits</span><br/><small> (1994)</small><blockquote>The 1993 Virus Review stated that I expected to see ...more previously undetected viruses come into Edinburgh coupled with an increase in the number of reported infections." (Scobie, 1993)Looking back over 1994 this is exactly what happened. More new viruses appeared while reported infections were up on the previous year. The pros and cons of why there should be an increase were outlined in last years review so I refer the reader to that as I feel they are still valid for this present review.The last two reviews have concerned themselves with features which are typical of the large majority of computer viruses. It is important to understand the basics of what computer viruses are about and I hope that the previous reviews provide a useful overview. This review departs from that format and concerns itself with some of my own observations on the virus situation as it is reported to me here at Edinburgh University. One or two other events of note are also featured and for good measure of couple of viruses are singled out for special mention. Next year, the review for 1995 will look back over the previous five years of viruses at Edinburgh and consider all the viruses reported to date.</blockquote>&laquo;<a name="aeu04" href="/lib/aeu04.html">Edinburgh University PC Virus Review 1995</a>&raquo; <small>17.51Kb</small> <span class="note">7657 hits</span><br/><small> (1995)</small><blockquote></blockquote>&laquo;<a name="aeu05" href="/lib/aeu05.html">Edinburgh University PC Virus Review 1996</a>&raquo; <small>8.39Kb</small> <span class="note">7578 hits</span><br/><small> (1996)</small><blockquote></blockquote>&laquo;<a name="aeu06" href="/lib/aeu06.html">Edinburgh University PC Virus Review 1997</a>&raquo; <small>17.62Kb</small> <span class="note">7687 hits</span><br/><small> (1997)</small><blockquote></blockquote>&laquo;<a name="aeu07" href="/lib/aeu07.html">Edinburgh University PC Virus Review 1998</a>&raquo; <small>12.84Kb</small> <span class="note">8595 hits</span><br/><small> (1998)</small><blockquote></blockquote>&laquo;<a name="aeu08" href="/lib/aeu08.html">Edinburgh University PC Virus Review 1999</a>&raquo; <small>17.01Kb</small> <span class="note">7926 hits</span><br/><small> (1999)</small><blockquote></blockquote>&laquo;<a name="vxx01" href="/lib/vxx01.html">How AVs Detect Viruses</a>&raquo; <small>15.68Kb</small> <span class="note">9197 hits</span><br/><small><a href="/vx.php?fid=976#f976">Natural Selection [1]</a> (2002)</small><blockquote>Over the last 10 years, Anti-Virus products evolved a great deal to well beyond the simple scan-stringers of the early 90s. Yet, beyond some vague concepts like "emulation", the AV industry has been reasonably successful in keeping everyone in the dark as to exactly the mechanisms by which viruses are detected. The time has come (in fact been long overdue) to shed light on a little of the info the AV guys don't want you to know.</blockquote><div class="l1"><strong>Ghannam Al-Dossary</strong></div>&laquo;<a name="agd00" href="/lib/agd00.html">Computer virus prevention and containment on mainframes</a>&raquo; <small>39.67Kb</small> <span class="note">14030 hits</span><br/><small>Proceedings of International Carnahan Conference on Security Technology, 1989. Zurich, Switzerland (1989)</small><blockquote>A computer virus can be a vicious and insidious form of code. It has the ability to replicate itserf, to attach itself to other code, to spread through a computer system or network, and often to initiate a harmful series of instructions when a "trigger" point is reached. Viruses can havea major impact on productivity because of the steadily increasing dependence of industrial, business, and government functions on the availability and integrity of data processing systems. Although mainframe computers have been the target of virus attacks less often than microcomputers up until now, there is no room for complacency when the stakes are so high. The novelty, the technical nature, and the tendency to romanticize this phenomenon, have resulted in a "blackbox" syndrome ("I don't know what's going on in there.") and a feeling of overwhelming impotence in the business community.The risk of viruses can be reduced. One approach is to examine the constituent parts from which a virus is composed, and to design a comprehensive defense which reckons with each of these parts. The protection chain will only be as strong as its weakest link. The author of this paper suggests a classification scheme which is useful in understanding the components of a virus and useful methods for maintaining the integrity of a computer system.This paper outlines basic prevention, detection, and correction techniques which are available today to reduce the threat of damages caused by viruses. These include software "vaccines" or filters; encryption; access control software (e.g. RACF, ACF2, and Top Secret); "test-to-production" control procedures; back-up and recovery procedures; personnel selection and review controls; and physical access control.The concepts presented in this paper conform to the "Trusted Computer System Evaluation Criteria" developed by the United States Computer Security Center and use eramples from major published virus incidents to illustrate the price of control weaknesses. The paper concludes that no working computer system is impregnable but that much can be done by industry to make most computer systems less inviting to attacks from viruses.A bibliography is included for further study.</blockquote><div class="l1"><strong>Timothy Arulsuthan</strong></div>&laquo;<a name="ata00" href="/lib/ata00.html">The race against malicious software</a>&raquo; <small>12.68Kb</small> <span class="note">9974 hits</span><br/><small> (2005)</small><blockquote>The Internet went from a technological marvel in the late 1980’s and early 1990’s to something that has become common-place in society today. However, as people log onto the World Wide Web and networks at a continually-increasing rate, the “hidden” threat of encountering malicious software programs also increases. Malicious software typically comes in the form of viruses and worms which “infect” its intended target and rapidly spread within the system or across a network. Exactly how they spread differentiates based on the type of code contained within.</blockquote><div class="l1"><strong>John Aycock</strong></div>&laquo;<a name="mja01" href="/lib/mja01.html">Computer Viruses and Malware</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <img src="/img/bin.gif" alt="[SRC]"/> <small>499.38Kb</small> <span class="note">59545 hits</span><br/><small>Advances in Information Security, Vol. 22 (2006)</small><blockquote>Our Internet-connected society increasingly relies on computers. As a result, attacks on computers from malicious software have never been a bigger concern. Computer Viruses and Malware draws together hundreds of sources to provide an unprecedented view of malicious software and its countermeasures. This book discusses both the technical and human factors involved in computer viruses, worms, and anti-virus software. It also looks at the application of malicious software to computer crime and information warfare.Computer Viruses and Malware is designed for a professional audience composed of researchers and practitioners in industry. This book is also suitable as a secondary text for advanced-level students in computer science.Written for:Computer and information security practitioners</blockquote>&laquo;<a name="mja05" href="/lib/mja05.html">Stux in a rut: Why Stuxnet is boring</a>&raquo; <small>16.83Kb</small> <span class="note">9660 hits</span><br/><small>Virus Bulletin, September 2011, page 14-17 (2011)</small><blockquote>The much-storied Stuxnet worm is unworthy of the hype surrounding it. The biggest surprise is that Stuxnet contains no surprises, and as such it suggests a general failure of security to respond to threats that are well known. The erroneous characterization of Stuxnet as ‘game-changing’ does raise other questions, however: what are the hallmarks of real game-changing security events, and why don’t we see more of them?</blockquote><div class="l1"><strong>Paul Baccas</strong></div>&laquo;<a name="apb02" href="/lib/apb02.html">Book worm</a>&raquo; <small>7.51Kb</small> <span class="note">7157 hits</span><br/><small>Virus Bulletin, December 2011, pp. 17-18 (2011)</small><blockquote>Review of the Mark Bowden's book "Worm: The First Digital World War"</blockquote><div class="l1"><strong>Justin Balthrop, Stephanie Forrest, M. Newman, Matthew Williamson</strong></div>&laquo;<a name="ajb01" href="/lib/ajb01.html">Technological Networks and the Spread of Computer Viruses</a>&raquo; <small>13.82Kb</small> <span class="note">11163 hits</span><br/><small>SCIENCE VOL 304 23 APRIL 2004 pp.527-529 (2004)</small><blockquote>Computer viruses and worms are an increasing problem throughout the world. By some estimates 2003 was the worst year yet: Viruses halted or hindered operations at numerous businesses and other organizations, disrupted cashdispensing machines, delayed airline flights, and even affected emergency call centers. The Sobig virus alone is said to have caused more than $30 billion in damage (1). And most experts agree that the damage could easily have been much worse. For example, Staniford et al. describe a worm that could infect the entire Internet in about 30 s (2). A worm of this scale and speed could bring the entire network to a halt, or worse.</blockquote><div class="l1"><strong>Timothy Barmann</strong></div>&laquo;<a name="p0019" href="/lib/p0019.html">Virus attacks can come from strange places</a>&raquo; <small>6.44Kb</small> <span class="note">9970 hits</span><br/><small> (1996)</small><blockquote></blockquote><div class="l1"><strong>Matt Bishop</strong></div>&laquo;<a name="amb01" href="/lib/amb01.html">An Overview of Computer Viruses in a Research Environment</a>&raquo; <small>84.03Kb</small> <span class="note">14901 hits</span><br/><small>Technical Report: PCS-TR91-156 (1991)</small><blockquote>The threat of attack by computer viruses is in reality a very small part of a much more general threat, speciﬁcally attacks aimed at subverting computer security. This paper examines computer viruses as malicious logic in a research and development environment, relates them to various models of security and integrity, and examines current research techniques aimed at controlling the threats viruses in particular, and malicious logic in general, pose to computer systems. Finally, a brief examination of the vulnerabilities of research and development systems that malicious logic and computer viruses may exploit is undertaken.</blockquote><div class="l1"><strong>Vesselin Bontchev</strong></div>&laquo;<a name="avb04" href="/lib/avb04.html">Possible Virus Attacks Against Integrity Programs And How To Prevent Them</a>&raquo; <small>56.66Kb</small> <span class="note">11787 hits</span><br/><small>Proc. 6th Int. Virus Bull. Conf., 1996, pp. 97-127. (1996)</small><blockquote>With the advent of the polymorphic viruses it is becoming obvious that the virus-specific scanners have exhausted themselves. Currently one of the most powerful methods to detect viruses is the so-called integrity programs.</blockquote><div class="l1"><strong>Stephen Cass</strong></div>&laquo;<a name="asc00" href="/lib/asc00.html">Anatomy of Malice</a>&raquo; <small>20.8Kb</small> <span class="note">10014 hits</span><br/><small>IEEE Spectrum vol. 38, issue 11, p.56-60 (2001)</small><blockquote>For anyone worried about viruses and worms, perhaps the best advice is Know Thy Enemy</blockquote><div class="l1"><strong>David Chess</strong></div>&laquo;<a name="adc01" href="/lib/adc01.html">Security in Agent Systems</a>&raquo; <small>21.81Kb</small> <span class="note">9559 hits</span><br/><small>IBM Thomas J. Watson Research Center (1998)</small><blockquote>Is it safe to click on this hyperlink? Do I trust the person who sent me this Word document? If I send this program out into the Web to find me some bargain CD's, will it get cheated? "Mobile" and "intelligent" agents are hot topics, and both have security implications. This talk will address some of these implications, and try to answer, or at least ask, some of the more obvious questions.</blockquote><div class="l1"><strong>David Chess, John Morar</strong></div>&laquo;<a name="adc03" href="/lib/adc03.html">Is Java still secure?</a>&raquo; <small>33.02Kb</small> <span class="note">10597 hits</span><br/><small>Virus Bulletin Conference; October, 1999 (1999)</small><blockquote>Java 2 (version 1.2) has now been released, and with it a new Java security architecture. We discuss the differences between the initial Java security architecture, the interim architectures in popular browsers, and the Java 2 model, including the implications of the new model for Java viruses and Trojan horses.</blockquote><div class="l1"><strong>Fred Cohen</strong></div>&laquo;<a name="afc04" href="/lib/afc04.html">The Computer Security Encyclopedia. Computer Viruses.</a>&raquo; <small>68.09Kb</small> <span class="note">18077 hits</span><br/><blockquote>A sequence of symbols which, when interpreted by an the environment in which it operates, replicates and/or evolves</blockquote>&laquo;<a name="afc12" href="/lib/afc12.html">Defense-In-Depth Against Computer Viruses</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <small>69.27Kb</small> <span class="note">11392 hits</span><br/><small>Computers and Security, Volume 11, Issue 6, pp. 563-579 (1992)</small><blockquote>In this paper, we discuss software based fault tolerant computing techniques used in defense against computer viruses and other integrity corruptions in modern computer systems. We begin with a summary of research on computer viruses, their potential for harm, and the extent to which this potential has been realized to date. We then examine major results on the application of fault tolerant software techniques for virus defense, including; the problems with conventional coding schemes in detecting intentional corruptions and the use of high performance cryptographic checksums for reliable detection; an optimal method for detecting viruses and preventing their further spread in untrusted computing environments; the use of redundancy and automated decision making for automatic and transparent repair of corruption and continuity of operation; and the use of fault avoidance techniques for limiting viral spread. Next we discuss the state-of-the-art in virus defense, its use of redundancy for defense-in-depth, the impact of this on the reliability of the mechanism, the implications of these results to other computing environments, and architectural issues in implementing hardware assisted virus defense based on the software fault tolerance techniques already in widespread use. Finally we summarize results, draw conclusions, and discuss further work.</blockquote><div class="l1"><strong>Peter Denning</strong></div>&laquo;<a name="apd02" href="/lib/apd02.html">Computer Viruses</a>&raquo; <small>17.75Kb</small> <span class="note">11898 hits</span><br/><small>Computers under attack: intruders, worms, and viruses, pp. 285-292 (1990)</small><blockquote></blockquote>&laquo;<a name="apd01" href="/lib/apd01.html">Computers Under Attack: Intruders, Worms and Viruses</a>&raquo; <span class="note">13938 hits</span><br/><small>Addison-Wesley Professional (1990)</small><blockquote></blockquote><div class="l1"><strong>Shaun DeRosa</strong></div>&laquo;<a name="asd00" href="/lib/asd00.html">The Evolution of the Computer Virus</a>&raquo; <small>4.66Kb</small> <span class="note">10141 hits</span><br/><small> (2006)</small><blockquote>In the last twenty years our society’s dependence on technology has grown exponentially. With the advent of the internet geographical boarders were in effect broken; distance is no longer a factor in human communication and interaction. Unfortunately, with the expansion of technology and all of the positive aspects associated with it comes the opposite; malware or as they are more commonly referred to as: viruses.Computer viruses have taken much the same path of evolution as the computers they infect. Starting as simple programs in the early days of computer technology, they have adapted and evolved into complex programs. As we see new horizons opening up before us with the ever expanding internet and new technologies, authors of malicious programs see the possibility of new exploits and security flaws, and so the constant battle to protect ourselves from these attacks will go on indefinitely.</blockquote><div class="l1"><strong>Christophe Devine, Nicolas Richaud</strong></div>&laquo;<a name="acd00" href="/lib/acd00.html">A study of anti-virus' response to unknown threats</a>&raquo; <small>34.55Kb</small> <span class="note">12898 hits</span><br/><small>EICAR 18th Annual Conference (2009)</small><blockquote>This study presents the evaluation of twelve anti-virus products with regards to programs not known from the signature files that show different kinds of malicious behavior. In practical terms, a set of twenty-one tests implementing various actions were developed; they cover key-logging, injection of code into other processes, network evasion, rootkit-like behaviour and exploitation of software vulnerabilities. The test programs were then run against each anti-virus program, and results were collected and consolidated. It was shown that all products tested here show deficiencies in at least one area, and some in all areas. For example, eleven anti-virus programs out of twelve still do not detect one code injection technique, which has been known for more than five years. Programs that spy on the user, such as recording the microphone, are not detected at all. Finally, this study provides recommendations to anti-virus vendors to enhance the capabilities of their products to detect malware, and improve safeguards against known attack techniques.</blockquote><div class="l1"><strong>Al Doran</strong></div>&laquo;<a name="p0020" href="/lib/p0020.html">The Dreaded Computer Virus and Why You Should be Concerned</a>&raquo; <small>10.73Kb</small> <span class="note">12584 hits</span><br/><small>http://www.geceventures.com/business/virusinfo/doran_article.shtml </small><blockquote></blockquote><div class="l1"><strong>Michael Erbschloe</strong></div>&laquo;<a name="ame01" href="/lib/ame01.html">Trojans, Worms and Spyware: A Computer Security Proffesional's Guide to Malicious Code</a>&raquo; <span class="note">10672 hits</span><br/><small>Elsevier Butterworth-Heinemann (2005)</small><blockquote>Trojans, Worms, and Spyware provides practical, easy to understand, and readily usable advice to help organizations to improve their security and reduce the possible risks of malicious code attacks. Despite the global downturn, information systems security remains one of the more in-demand professions in the world today. With the widespread use of the Internet as a business tool, more emphasis is being placed on information security than ever before. To successfully deal with this increase in dependence and the ever growing threat of virus and worm attacks, Information security and information assurance (IA) professionals need a jargon-free book that addresses the practical aspects of meeting new security requirements. This book provides a comprehensive list of threats, an explanation of what they are and how they wreak havoc with systems, as well as a set of rules-to-live-by along with a system to develop procedures and implement security training. It is a daunting task to combat the new generation of computer security threats ? new and advanced variants of Trojans, as well as spyware (both hardware and software) and ?bombs? ? and Trojans, Worms, and Spyware will be a handy must-have reference for the computer security professional to battle and prevent financial and operational harm from system attacks.</blockquote><div class="l1"><strong>Steven Furnell, Jeremy Ward</strong></div>&laquo;<a name="afs01" href="/lib/afs01.html">The True Computer Parasite</a>&raquo; <small>23.68Kb</small> <span class="note">10516 hits</span><br/><small>SecurityFocus (2005)</small><blockquote>It is now twenty years since Fred Cohen published his seminal research paper suggesting the potential threat of computer viruses. In the years since this publication, the risk that Cohen described has unquestionably been borne out, and alongside hackers, the threat of the computer virus is the security issue that has most clearly permeated the public mind.</blockquote><div class="l1"><strong>Sarah Gordon</strong></div>&laquo;<a name="asg08" href="/lib/asg08.html">The Anti-Virus Strategy System</a>&raquo; <small>33.44Kb</small> <span class="note">11372 hits</span><br/><small>Virus Bulletin (1995)</small><blockquote>The article examine the 'anti-virus' strategy (Policy, Procedure, Software [selection, implementation, maintenance]), focusing on areas where the 'system' can fail.</blockquote>&laquo;<a name="asg11" href="/lib/asg11.html">Are Good Virus Simulators Still a Bad Idea?</a>&raquo; <small>28.59Kb</small> <span class="note">13610 hits</span><br/><small>Elsevier Advanced Technology, Oxford, UK. (1995)</small><blockquote>This article will examine the positive and negative connotations of virus simulators</blockquote>&laquo;<a name="asg14" href="/lib/asg14.html">What's in a Name?</a>&raquo; <small>13.13Kb</small> <span class="note">9434 hits</span><br/><small>Symantec (2002)</small><blockquote>In this article, issues of virus naming as they impact users will be discussed, and some of the ways that naming might affect the reviewing of products will be examined.</blockquote><div class="l1"><strong>Sarah Gordon, Howard Fraser</strong></div>&laquo;<a name="asg15" href="/lib/asg15.html">Antivirus Software Testing for the New Millenium</a>&raquo; <small>42.32Kb</small> <span class="note">11132 hits</span><br/><small> (2000)</small><blockquote>The nature of technology is changing rapidly; likewise, the nature of viral threats to the data dependent upon the technology is evolving. Thus, the technologies we rely upon to provide protection from these threats must adapt. In the last twelve months, several anti-virus software vendors have announced exciting new technologies which claim to provide “faster, better, cheaper” response to computer virus incidents within organizations. However, there is currently little guidance regarding the best way to evaluate the efficacy of such claims. Faster than what? Better than what? Less costly compared to what? Clearly, there can only be one technology which is “faster, better, most cost efficient" than all of the others, yet if the advertising claims are to be believed, all products are not merely created equal, they are all created superlative!In this paper, the requirements for these next generation anti-virus systems will be examined. There will be a discussion of reviewing strategies that can help to determine to what extent those requirements have been met. To this end, the problem will be approached from a functional perspective, not gearing the test design to particular implementations. In this way, an array of tests will be created which are not vendor or product specific, but which can and should be employed industry-wide.</blockquote><div class="l1"><strong>Roger Grimes</strong></div>&laquo;<a name="arg01" href="/lib/arg01.html">Malicious Mobile Code: Virus Protection for Windows</a>&raquo; <span class="note">10640 hits</span><br/><small>O'Reilly (2001)</small><blockquote>Malicious mobile code is a new term to describe all sorts of destructive programs: viruses, worms, Trojans, and rogue Internet content. Until fairly recently, experts worried mostly about computer viruses that spread only through executable files, not data files, and certainly not through email exchange. The Melissa virus and the Love Bug proved the experts wrong, attacking Windows computers when recipients did nothing more than open an email. Today, writing programs is easier than ever, and so is writing malicious code. The idea that someone could write malicious code and spread it to 60 million computers in a matter of hours is no longer a fantasy.</blockquote><div class="l1"><strong>David Harley, Robert Slade, Urs Gattiker</strong></div>&laquo;<a name="ars08" href="/lib/ars08.html">Viruses Revealed: Understanding and Counter Malicious Software</a>&raquo; <img src="/img/bin.gif" alt="[SRC]"/> <small>1.34Mb</small> <span class="note">61097 hits</span><br/><small>McGraw-Hill Companies (2001)</small><blockquote>Defend your system against the real threat of computer viruses with help from this comprehensive resource. Up-do-date and informative, this book presents a full-scale analysis on computer virus protection. Through use of case studies depicting actual virus infestations, this guide provides both the technical knowledge and practical solutions necessary to guard against the increasing threat of virus attacks.</blockquote><div class="l1"><strong>Jan Hruska</strong></div>&laquo;<a name="ajh00" href="/lib/ajh00.html">Computer viruses and anti-virus warfare</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <img src="/img/bin.gif" alt="[SRC]"/> <small>521.67Kb</small> <span class="note">18630 hits</span><br/><small>Ellis Horwood, p.224 (1992)</small><blockquote>Given the relationship between Hruska, Sophos, and Virus Bulletin, the similarity of material which also appears in "The Survivor's Guide to Computer Viruses" is not terribly surprising. We have the identical Virus Bulletin virus reports (frequency of total reports), the same interest in the AIDS Information diskette scam, the same vendor list (also without product information), the same insistence on calling the virus everyone else knows as Stoneed by the term, "New Zealand", and the same MS-DOS only emphasis.There is no statement as to the intended audience for the book, but it seems to be directed at that very small segment of the population who are interested in computer virus research. Unfortunately, and very oddly, much of the material in this book is of as much use to the virus writer as to the antiviral researcher. There are no full virus samples in the book, but there are handy snippets such as a simple encryption scheme, a master boot record extractor and a chunk of the dBASE virus, with full instructions for turning it into a disk killer.Those lowly souls who wish merely to protect their own systems may not be lost by this book, but will very probably be bemused by it all. There is a short but helpful (to the virus writer) section on disassembly of a virus. Two paragraphs are devoted to explaining how to use the DEBUG program to write your own code to extract the master boot record for examination. There follows the off-hand comment that the same thing can be done with common utility programs. The hygiene rules for reducing the risk of virus infection include the usual lame points regarding BBSes, shareware, and public domain programs. Recommended is a setup to "quarantine" a workgroup from outside disks (surprise, surprise: Sophos makes software to support this) and change detection antiviral software (surprise, surprise: Sophos makes such a program).The book is good at the basic technical explanations. How viral programs function, and how antiviral programs function, are clearly set forth in basic terms. Most of the illustrations and figures are helpful, although some are extremely puzzling. (The inclusion of the full text of a virus source code opening comment seems to have no justification, nor does the highlighting of portions thereof.) An examination of Novell operations and testing against viral programs is probably a useful inclusion. As long as Hruska sticks with technical details, he's fine.Given the names mentioned in the acknowledgements, parts of the commentary are very odd in their departure from general understanding within the research community. Hruska speaks of the recent rise of "network aware" viral programs. (I can recall, and he gives as an example, only one.) There is mention of a media sensation over the BRAIN virus in 1986; I don't recall any such thing. Early viral programs from 1987 are contrasted with more recent, destructive, viral programs; both Lehigh and Jerusalem caused erasure of materials. The ABC News report of the mythical Desert Storm/Iraqi printer virus is mentioned as barely believable, even though the story had been utterly debunked months before the book was written.Chapter five, Who Writes Viruses, is astonishing. Hackers are defined as being "analogous to drug addicts". Then there are freaks, who have "serious social adjustment problems". University students are linked to software piracy. Employees are mentioned, even though employee "attacks" usually utilize insider knowledge which viral programs don't need. Computer clubs are mentioned (I get the impression Hruska is *not* a joiner) as are terrorist organizations. All of these profiles are caricatures, if not outright fabrications. Ultimately, this entire section is not only useless, but promotes misunderstanding of the situation by fostering false images. Virus writers tend to be self-important and irresponsible - but they aren't freaks (and they generally grow out of it).For those with antiviral policies and procedures already in place, this work has a position in ongoing study and development. (R. Slade)</blockquote><div class="l1"><strong>Mikko Hyppönen</strong></div>&laquo;<a name="amk01" href="/lib/amk01.html">Retroviruses - How viruses fight back</a>&raquo; <small>29.93Kb</small> <span class="note">6211 hits</span><br/><small>Virus Bulletin Conference, VDAT (1994)</small><blockquote>This paper will discuss the methods viruses use or might use in the future to attack anti-virus programs. Attacks of this kind are becoming more common, as virus writers seem to be constantly looking for ways to make their viruses more efficient and vigorous. This paper also suggests how to make anti-virus products more resistant to such attacks. The scope of this paper is limited to PC-compatible machines.</blockquote><div class="l1"><strong>Zsombor Kurdi</strong></div>&laquo;<a name="azk00" href="/lib/azk00.html">Viruses using .NET Framework</a>&raquo; <small>13.06Kb</small> <span class="note">12086 hits</span><br/><small>4th Serbian-Hungarian Joint Symposium on Intelligent Systems, SISY 2006, pp.473-478 (2006)</small><blockquote>In our age, programming languages and development tools advance to make programmers' work much easier. The tools can assemble programs written different programming languages, they can build executables can be run independently of the operating system. This simplification of software development causes the simplification of writing programs with the prepense of malice (e.g. viruses). So developers of these tools have to care about the security. Farther this virtual equivalency of computers – and the spreading of Internet – make easier to viruses infecting a computer.</blockquote><div class="l1"><strong>Peter Ladkin, Harold Thimbleby</strong></div>&laquo;<a name="aht05" href="/lib/aht05.html">Comments on a paper by Voas, Payne & Cohen: “A model for detecting the existence of software corruption in real time”</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <small>14.49Kb</small> <span class="note">10132 hits</span><br/><small>Computers & Security, 13(6), pp527–531, 1994. (1994)</small><blockquote>We discuss a procedure proposed by Voas, Payne &amp; Cohen [6] for detecting the existence of software corruption in real time. In particular, we discuss problems posed by the concurrent execution of programs. In the cases where the proposed method may work, corruption is unlikely to be a problem; and where corruption by viruses and Trojans are a problem, major problems with the method remain.</blockquote><div class="l1"><strong>Mark Ladue</strong></div>&laquo;<a name="aml00" href="/lib/aml00.html">When Java Was One: Threats From Hostile Byte Code</a>&raquo; <small>30.23Kb</small> <span class="note">11676 hits</span><br/><small>Proc. 20th NIST-NCSC National Information Systems Security Conference (1997)</small><blockquote>In Java's first year it has become clear that many of the problems posed by executable content have not been solved. The almost exclusive focus of the Java community on executable content has left numerous avenues unexplored for threats. It has been observed that there is no one-to-one correspondence between Java source code (programs) and Java byte code (class files). While every program written in Java can be compiled to byte code by a Java compiler, it is possible to create classfiles which no Java compiler can produce, and yet, which pass the Java Verifier with flying colors. This fact has one very serious implication -No matter what claims are made, and even formally demonstrated, for the security of the Java language, all bets are off when it comes to byte code running in the Java Virtual Machine. This paper will explore some of the implications of this curious lack of coherence between Java source code and byte code. It will also illustrate how easy it is to alter Java class files for malicious purposes.</blockquote><div class="l1"><strong>Ferenc Leitold</strong></div>&laquo;<a name="afl02" href="/lib/afl02.html">The solution in the naming chaos</a>&raquo; <small>31.79Kb</small> <span class="note">11710 hits</span><br/><small>EICAR 2005 Conference: Best Paper Proceedings, pp.365-378 (2005)</small><blockquote>As the first computer virus born there were a lot of godfather of it. Every antivirus solution uses its own naming convention so now there are more than hundred-thousand different computer viruses in the world and there are at least one million virus names for them. This problem is highlighted in this paper. Unfortunately it is impossible that antivirus developers change their naming convention and use the same identification of the same computer virus. Virus and worm nomenclature is typically left up to the security vendor which first discovers the malware. Until the beginning of 2004 the process worked, more or less. But the large scale and rapid release of multiple variants of worms in the Netsky, Bagle, MyDoom and other families last year led to confusion, with antivirus firms out of sync in their naming. One vendor would tag a new Bagle as Bagle.w, for instance, while others would call it Bagle.u or Bagle.t.</blockquote><div class="l1"><strong>Allan Lundell</strong></div>&laquo;<a name="aal04" href="/lib/aal04.html">Virus! The Secret World of Computer Invaders That Breed and Destroy</a>&raquo; <span class="note">12493 hits</span><br/><small>Contemporary Books (1989)</small><blockquote></blockquote><div class="l1"><strong>Bhaskar Mukherjee</strong></div>&laquo;<a name="abm00" href="/lib/abm00.html">Threats to Digitization: Computer Virus</a>&raquo; <small>30.38Kb</small> <span class="note">11404 hits</span><br/><small>6th International CALIBER-2008, University of Allahabad, Allahabad, February 28-29, March 1, 2008 (2008)</small><blockquote>Discusses historical background of Internet and pointed out how threats to digitization has increased with the development of Internet. The paper mentioned common symptoms of virus infection and suggests some measures towards protecting computers from virus as recommended by Microsoft and Symantec Corporation. Also lists some authorized anti-virus software available on Internet.</blockquote><div class="l1"><strong>Igor Muttik</strong></div>&laquo;<a name="aim01" href="/lib/aim01.html">Stripping down an AV engine</a>&raquo; <small>31.96Kb</small> <span class="note">6810 hits</span><br/><small>Virus Bulletin Conference (2000)</small><blockquote>The complexity of anti-virus software has grown enormously over the last five years. The methods used to detect viruses have evolved from dumb-grunt scanning of the whole file from top to bottom for a specific search string to very intelligent methods based on a combination of heuristic and specific detection methods. This paper discusses this evolution in detail: from old-fashioned methods to the most complex contemporary ones. When speaking to the people not directly involved in the AV business I found it rather amusing that they are usually surprised to find that these days we do not use scan strings as such any more. In fact, we do, but not frequently, because for contemporary malware better methods can be used. What are they?</blockquote><div class="l1"><strong>Carey Nachenberg</strong></div>&laquo;<a name="acn01" href="/lib/acn01.html">Computer Virus-Antivirus Coevolution</a>&raquo; <small>29.05Kb</small> <span class="note">16310 hits</span><br/><small>COMMUNICATIONS OF THE ACM January 1997/Vol. 40, No. 1, pp. 46-51 (1997)</small><blockquote>The battle to conquer computer viruses is far from won, but new and improved antidotes are controlling the field.</blockquote>&laquo;<a name="acn03" href="/lib/acn03.html">Understanding and Managing Polymorphic Viruses</a>&raquo; <small>19.68Kb</small> <span class="note">10882 hits</span><br/><small>The Symantec Enterprise Papers, Volume XXX (1996)</small><blockquote>Polymorphic computer viruses are the most complex and difficult viruses to detect, often requiring anti-virus companies to spend days or months creating the detection routines needed to catch a single polymorphic</blockquote><div class="l1"><strong>Martin Overton</strong></div>&laquo;<a name="amo00" href="/lib/amo00.html">FAT32 New Problems for Anti-Virus, or Viruses? (version 1.01)</a>&raquo; <small>69.77Kb</small> <span class="note">15660 hits</span><br/><small> (1997)</small><blockquote>The sudden appearance of FAT32 in service pack 2 for Windows '95 has brought some new complications for both viruses and anti-virus software. What's worse is the update is only available to OEMs to ship on new PCs. It's been dubbed Windows '96-and-a-half, as it is just a short stop from Windows '97 (now finally called Windows '98). What are the implications of Microsoft's latest addition to the file system format jungle? Can the existing anti-virus software handle FAT32? Can the existing boot and partition sector viruses infect FAT32 successfully, and without making the system unbootable or unusable? Will file-infecting viruses be affected? This paper aims to deflate the myths, clarify the differences and report the results of testing the above scenarios.</blockquote><div class="l1"><strong>Adam Reynolds</strong></div>&laquo;<a name="aar00" href="/lib/aar00.html">I.T. IN PRACTICE: Computer viruses</a>&raquo; <small>5.67Kb</small> <span class="note">9870 hits</span><br/><small>Law Institute Journal, 75 No 11, p.26 (2001)</small><blockquote>This article looks at computer viruses, the types of damage they cause and ways of minimising this damage.</blockquote><div class="l1"><strong>Bruce Schneier</strong></div>&laquo;<a name="abs00" href="/lib/abs00.html">Secrets & Lies: Digital Security in a Networked World (excerpt)</a>&raquo; <small>20.06Kb</small> <span class="note">12020 hits</span><br/><small>John Wiley & Sons, 2000 (2000)</small><blockquote>Information security expert Bruce Schneier explains what everyone in business needs to know about security in order to survive and be competitive. Pragmatic, interesting, and humorous, Schneier exposes the digital world and the realities of our networked society. He examines the entire system, from the reasons for technical insecurities to the minds behind malicious attacks. You'll be guided through the security war zone, and learn how to understand and arm yourself against the threats of our connected world.</blockquote><div class="l1"><strong>Sasha Segan</strong></div>&laquo;<a name="ass00" href="/lib/ass00.html">Killer Apps</a>&raquo; <small>8.39Kb</small> <span class="note">9636 hits</span><br/><small>SmartComputing, August 2002, vol. 13, issue 8, pp.54-57 (2002)</small><blockquote>Computer Viruses Are Nothing New. Don't be ashamed. Everybody's had a virus at one time or another. The social diseases of the Internet age, computer viruses vary from the unnoticeable to the utterly horrifying. There are more of them than you think, and they're not going away. According to research firm TruSecure, 28% of corporations had a "virus disaster" resulting in 25 or more infected computers between January and September 2001. "The malicious code problem...continues its seven-plus year trend of worsening every year," Peter Tippett, chief technology officer of antiviral firm TruSecure, said in the 2001 report.</blockquote><div class="l1"><strong>Zubair Shafiq, Momina Tabish, Muddassar Farooq</strong></div>&laquo;<a name="azs00" href="/lib/azs00.html">Are Evolutionary Rule Learning Algorithms Appropriate for Malware Detection?</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <small>11.91Kb</small> <span class="note">11333 hits</span><br/><small>Proceedings of the 11th Annual conference on Genetic and evolutionary computation, pp.1915-1916 (2009)</small><blockquote>In this paper, we evaluate the performance of ten well-known evolutionary and non-evolutionary rule learning algorithms. The comparative study is performed on a real-world classification problem of detecting malicious executables. The executable dataset, used in this study, consists of a total of 189 attributes which are statically extracted from the executables of Microsoft Windows operating system. In our study, we evaluate the performance of rule learning algorithms with respect to four metrics: (1) classification accuracy, (2) the number of rules in the developed rule set, (3) the comprehensibility of the generated rules, and (4) the processing overhead of the rule learning process. The results of our study highlight important shortcomings in evolutionary rule learning classifiers that render them infeasible for deployment in a real-world malware detection system.</blockquote><div class="l1"><strong>Robert Slade</strong></div>&laquo;<a name="ars02" href="/lib/ars02.html">File infecting viri</a>&raquo; <small>2.41Kb</small> <span class="note">9093 hits</span><br/><small>http://www.textfiles.com/virus/funpiv1.cvp (1991)</small><blockquote></blockquote>&laquo;<a name="ars06" href="/lib/ars06.html">Infection variations</a>&raquo; <small>2.71Kb</small> <span class="note">8776 hits</span><br/><small>http://www.textfiles.com/virus/funpiv5.cvp (1991)</small><blockquote></blockquote>&laquo;<a name="ars00" href="/lib/ars00.html">Slade's Virus Books Reviews</a>&raquo; <img src="/img/bin.gif" alt="[SRC]"/> <small>190.8Kb</small> <span class="note">7805 hits</span><br/><small> (2010)</small><blockquote>Reviews of various books about computer viruses</blockquote>&laquo;<a name="ars05" href="/lib/ars05.html">Viral code "association"</a>&raquo; <small>2.76Kb</small> <span class="note">8165 hits</span><br/><small>http://www.textfiles.com/virus/funpiv4.cvp (1991)</small><blockquote></blockquote>&laquo;<a name="ars04" href="/lib/ars04.html">Viral code addition</a>&raquo; <small>2.4Kb</small> <span class="note">7080 hits</span><br/><small>http://www.textfiles.com/virus/funpiv3.cvp (1991)</small><blockquote></blockquote>&laquo;<a name="ars03" href="/lib/ars03.html">Viral code insertion</a>&raquo; <small>2.26Kb</small> <span class="note">7021 hits</span><br/><small>http://www.textfiles.com/virus/funpiv2.cvp (1991)</small><blockquote></blockquote><div class="l1"><strong>Alan Solomon</strong></div>&laquo;<a name="aas10" href="/lib/aas10.html">All About Viruses</a>&raquo; <small>41.3Kb</small> <span class="note">20840 hits</span><br/><blockquote>[...] In my experience, a lot of the `damage done by viruses' is actually damage done by people doing things before they've made sure of what they ought to do, which is another way of saying panic. So, don't panic! [...]</blockquote>&laquo;<a name="aas04" href="/lib/aas04.html">A Guide to Evaluating Anti-Virus Software</a>&raquo; <small>57.88Kb</small> <span class="note">12438 hits</span><br/><blockquote>[...] The purpose of this guide is to answer some of the most common questions about how to test and evaluate anti-virus software [...]</blockquote>&laquo;<a name="aas01" href="/lib/aas01.html">Guidelines for an Anti-Virus Policy</a>&raquo; <small>21.39Kb</small> <span class="note">11011 hits</span><br/><blockquote>[...] The virus threat is real. It is not the world-shattering problem sometimes outlined in the pages of the press; nor is it the non-existent 'urban myth' suggested by others. Many 'in the wild' viruses cause no damage; but a significant number are specifically designed to cause data loss [...]</blockquote>&laquo;<a name="aas05" href="/lib/aas05.html">Java, ActiveX and the Virus Threat</a>&raquo; <small>8.86Kb</small> <span class="note">12090 hits</span><br/><blockquote>[...] New technologies, such as Java and ActiveX, create fresh environments that hackers can potentially exploit. Luckily, while there has been a lot of press given to potential security problems with these and other Internet technologies, to date there are no documented "in-the-wild" attacks based on Java or ActiveX [...]</blockquote>&laquo;<a name="aas09" href="/lib/aas09.html">Plumbing the Depths</a>&raquo; <small>9.3Kb</small> <span class="note">10773 hits</span><br/><blockquote>[...] PC users sometimes resort to drastic measures to remove a virus. The use [more precisely, misuse] of low-level programs like FDISK, to remove viruses, is more common than might be expected [...]</blockquote>&laquo;<a name="aas12" href="/lib/aas12.html">Windows 95 and Viruses</a>&raquo; <small>3.31Kb</small> <span class="note">9021 hits</span><br/><blockquote>[...] Shortly after Windows 95 was released, we carried out a series of tests designed to see what effect boot sector viruses and DOS executable file viruses would have on the [new] operating system [...]</blockquote>&laquo;<a name="aas13" href="/lib/aas13.html">Worms</a>&raquo; <small>1.9Kb</small> <span class="note">8784 hits</span><br/><blockquote>[...] The worms described below affect computers utilizing mIRC software to access IRC (Internet relay Chat) channels [...]</blockquote><div class="l1"><strong>Richard Stallman</strong></div>&laquo;<a name="p0023" href="/lib/p0023.html">MyDoom and You</a>&raquo; <small>3.91Kb</small> <span class="note">9364 hits</span><br/><small>http://www.gnu.org/philosophy/my_doom.html (2004)</small><blockquote>If anyone has knowledge or evidence about who developed the virus, I hope he or she will come forth and make an accusation against specific people based on specific proof. But nobody should make accusations without proof, and there is no excuse for guilt by association. Not in New York, not in Cambridge, and not in the Free World.</blockquote><div class="l1"><strong>David Stang</strong></div>&laquo;<a name="ads02" href="/lib/ads02.html">The Computer Virus Problem</a>&raquo; <small>44.72Kb</small> <span class="note">18473 hits</span><br/><small>Seven Locks Software, Inc. </small><blockquote></blockquote><div class="l1"><strong>James Stanger</strong></div>&laquo;<a name="ajs01" href="/lib/ajs01.html">E-mail Virus Protection Handbook</a>&raquo; <span class="note">10234 hits</span><br/><small>Syngress Media (2000)</small><blockquote>E-mail has been called the killer application of the Internet with so many web-based commerce applications, business-to-business transactions, and Application Service Providers dependent on the e-mail client/server relationship. Now, because of that reliance, it is possible for e-mail software to become killer applications in an entirely different sense\x{2014}if they\x{2019}re down, they can kill your business. E-mail Virus Protections Handbook will help systems administrators and the end-users secure their e-mail. It shows how to encrypt e-mail messages, use antivirus and personal firewall software, and secure the operating system from attack. Know what\x{2019}s lurking in your e-mail! (Bur)</blockquote><div class="l1"><strong>Péter Ször</strong></div>&laquo;<a name="aps00" href="/lib/aps00.html">The Art of Computer Virus Research and Defense</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <img src="/img/bin.gif" alt="[SRC]"/> <small>1.41Mb</small> <span class="note">89106 hits</span><br/><small>Addison Wesley Professional (2005)</small><blockquote>Peter Szor takes you behind the scenes of anti-virus research, showing howthey are analyzed, how they spread, and - most importantly - how to effectively defend against them. This book offers an encyclopedic treatment of thecomputer virus, including: a history of computer viruses, virus behavior, classification, protection strategies, anti-virus and worm-blocking techniques,and how to conduct an accurate threat analysis. The Art of Computer VirusResearch and Defense entertains readers with its look at anti-virus research, but more importantly it truly arms them in the fight against computer viruses.As one of the lead researchers behind Norton AntiVirus, the most popularantivirus program in the industry, Peter Szor studies viruses every day. Byshowing how viruses really work, this book will help security professionals andstudents protect against them, recognize them, and analyze and limit thedamage they can do.</blockquote><div class="l1"><strong>Andrew Tanenbaum</strong></div>&laquo;<a name="aat00" href="/lib/aat00.html">Modern operating systems</a>&raquo; <small>58.13Kb</small> <span class="note">16542 hits</span><br/><small>http://www.prenhall.com/divisions/esm/app/author_tanenbaum/custom/mos2e/ (2001)</small><blockquote>The threats discussed in the previous sections were largely caused from the inside, that is, perpetrated by users already logged in. However, for machines connected to the Internet or another network, there is a growing external threat. A networked computer can be attacked from a distant computer over the network. In nearly all cases, such an attack consists of some code being transmitted over the network to the target machine and executed there doing damage. As more and more computers join the Internet, the potential for damage keeps growing. In the following sections we will look at some of the operating systems aspects of these external threats, primarily focusing on viruses, worms, mobile code, and Java applets.</blockquote><div class="l1"><strong>James Tarala</strong></div>&laquo;<a name="ajt00" href="/lib/ajt00.html">Virii Generators: Understanding the Threat</a>&raquo; <small>35.06Kb</small> <span class="note">14606 hits</span><br/><small> (2002)</small><blockquote>The most common generators are the virii script generators, polymorphic, and encryption generation engines. Each of these generators comes in multiple forms with multiple types of interfaces, the most common being GUI interfaces, command line interfaces, and assembly level interfaces. Thankfully, the government as has sought to deter the practice of virii creation through clear consequences spelled out for those who engage in such activities. Each of these precepts needs to be thought through more, however, to really understand the threat against the enterprise, caused by such virii generators.</blockquote><div class="l1"><strong>Mario Tinto</strong></div>&laquo;<a name="amt01" href="/lib/amt01.html">Computer viruses: Prevention, Detection, and Treatment</a>&raquo; <small>40.27Kb</small> <span class="note">14331 hits</span><br/><small> (1989)</small><blockquote>This publication contains technical observations, opinions, and evidence prepared for informal exchange among individuals involved with computer security. The information contained herein represents the views of the author and is not to be construed as representing an official position of the National Computer Security Center.</blockquote><div class="l1"><strong>John Wack, Lisa Carnahan</strong></div>&laquo;<a name="ajw02" href="/lib/ajw02.html">Computer Viruses and Related Threats: A Management Guide</a>&raquo; <small>92.39Kb</small> <span class="note">16525 hits</span><br/><small>Computer Systems Technology, NIST Special Publication (1989)</small><blockquote>This document provides guidance for technical managers for the reduction of risk to their computer systems and networks from attack by computer viruses, unauthorized users, and related threats. The guidance discusses the combined use of policies, procedures, and controls to address security vulnerabilities that can leave systems open to attack. The aim of this document is not to provide solutions to the wide range of specific problems or vulnerabilities, rather it is to help technical managers administer their systems and networks such that manifestations of viruses and related threats can be initially prevented, detected, and contained.</blockquote><div class="l1"><strong>Wallace Wang</strong></div>&laquo;<a name="aww01" href="/lib/aww01.html">Stalking a Computer Virus</a>&raquo; <small>9.03Kb</small> <span class="note">11454 hits</span><br/><small> (1996)</small><blockquote>When most people find a computer virus lurking on their hard disk, the first reaction is to grab an anti-virus program such as The Norton AntiVirus or McAfee's VirusScan, and kill the virus as quickly as possible. The two common ways to kill a computer virus are to delete the infected file (which is like killing cancer by shooting the patient) or attempting a slightly riskier method of cleaning the infected file.Cleaning an infected file means the anti-virus program tries to remove the computer virus program code from a file without harming the infected file. In many cases, a computer virus attaches itself so firmly to a file that removing the computer virus irreparably damages the infected file as well. When this happens, you have no choice but to delete the infected file.But rather than delete an infected file or let an anti-virus program try to clean it, you might be interested in trying a third approach, if you like living dangerously - study the computer virus and dissect it.Such amateur virus sleuthing can be interesting but dangerous, much like trying to make pipe bombs from plans you find on the Internet. Before attempting to isolate and dissect a virus, make backups of all your important files. That way if the virus gets loose and wipes out your hard disk, you won't lose everything for good. (Better yet, practice looking for a virus on a computer that you don't care about, such as an old computer or a computer belonging to your boss or disliked co-worker. That way if a virus gets loose and wipes everything out, at least your computer data will still be safe.)</blockquote><div class="l1"><strong>Trudy Wassenaar, Martin Blase</strong></div>&laquo;<a name="mtw00" href="/lib/mtw00.html">Contagion on the Internet</a>&raquo; <small>10.34Kb</small> <span class="note">11831 hits</span><br/><small>Emerging Infectious Deseases, Vol 8, No. 3, March 2003, pp.335-336 (2002)</small><blockquote></blockquote><div class="l1"><strong>Steve White</strong></div>&laquo;<a name="asw02" href="/lib/asw02.html">Covert Distributed Processing with Computer Viruses</a>&raquo; <img src="/img/sum.gif" alt="[TeX]"/> <small>9.03Kb</small> <span class="note">12688 hits</span><br/><small>Advances in Cryptology - Crypto '89, Lecture Notes in Computer Science, Vol. 435, pp. 616-619, 1989. (1989)</small><blockquote>Computer viruses can be used by their authors to harness the resources of infected machines for the author's computation. By doing so without the permission or knowledge of the machine owners, viruses can be used to perform covert distributed processing. We outline the class of problems for which covert distributed processing can be used. A brute-force attack on cryptosystcms is one such problem, and we give estimates of the time required to complete such an attack covertly.</blockquote>&laquo;<a name="asw01" href="/lib/asw01.html">Open Problems in Computer Virus Research</a>&raquo; <small>40.95Kb</small> <span class="note">13077 hits</span><br/><small>Virus Bulletin Conference, Oct 22, 1998, Munich Germany (1998)</small><blockquote>Over a decade of work on the computer virus problem has resulted in a number of useful scientific and technological achievements. The study of biological epidemiology has been extended to help us understand when and why computer viruses spread. Techniques have been developed to help us estimate the safety and effectiveness of anti-virus technology before it is deployed. Technology for dealing with known viruses has been very successful, and is being extended to deal with previously unknown viruses automatically. Yet there are still important research problems, the solution to any of which significantly improve our ability to deal with the virus problems of the near future. The goal of this paper is to encourage clever people to work on these problems. To this end, we examine several open research problems in the area of protection from computer viruses. For each problem, we review the work that has been done to date, and suggest possible approaches. There is clearly enough work, even in the near term, to keep researchers busy for quite a while. There is every reason to believe that, as software technology evolves over the next century or so, there will plenty of important and interesting new problems that must be solved in this field.</blockquote><div class="l1"><strong>Steve White, David Chess, Chengi Kuo</strong></div>&laquo;<a name="asw00" href="/lib/asw00.html">Coping with Computer Viruses and Related Problems</a>&raquo; <small>63.76Kb</small> <span class="note">13349 hits</span><br/><small> (1989)</small><blockquote>We discuss computer viruses and related problems. Our intent is to help both executive and technical managers understand the problems that viruses pose, and to suggest practical steps they can take to help protect their computing systems.</blockquote><div class="l1"><strong>Kurt Wismer</strong></div>&laquo;<a name="akw00" href="/lib/akw00.html">The Anti-Virus Cook Book v1.5</a>&raquo; <small>41.28Kb</small> <span class="note">13027 hits</span><br/><small> (1998)</small><blockquote>The purpose of this document is to serve as an educational tool. I have felt for a long time now that the computer virus is much like a headache and that the average user should be able to administer proper anti-virus techniques on their computer as easily as they administer Tylenol, instead of having to run frantically to a specialist all the time (especially since most of those same specialists make available several tools that would take care of almost all the problems a user is likely to encounter).</blockquote><div class="l1"><strong>Ian Witten</strong></div>&laquo;<a name="aiw00" href="/lib/aiw00.html">Computer (In)security: Infiltrating Open Systems</a>&raquo; <img src="/img/bin.gif" alt="[SRC]"/> <small>83.07Kb</small> <span class="note">15401 hits</span><br/><small>ABACUS, Vol. 4, No. 4, Summer 1987, pp. 7-25. (1987)</small><blockquote>Despite advances in authentication and encryption methods, computer systems are just as vulnerable as ever.</blockquote><div class="l1"><strong>Sung Yang</strong></div>&laquo;<a name="asy01" href="/lib/asy01.html">Productivity, Technology and AntiVirus Industry</a>&raquo; <small>29.86Kb</small> <span class="note">10399 hits</span><br/><small> (1996)</small><blockquote>The technological equilibrium in antivirus industry will be ended by the appearance of superior antivirus technologies. The end of technological equilibrium will be a crisis and an opportunity. Scientifically managed process of brain works will bring a productivity revolution among knowledge workers, which economists have failed to identify, and will transform this world into a new world, as Taylor's scientific management in making and moving things did. Scientific management of brain works and scientific management in making and moving things have in common: process, which is a form of knowledge. Superior technologies and successful application of scientific management of brain works will divide antivirus industry into survivors and losers.Any feedback is very much appreciated, please contact author. This may freely be copied and distributed without any modification for non-commercial use.</blockquote> <span class="note">54 authors, 81 titles</span></div>
<div><small>By accessing, viewing, downloading or otherwise using this content you agree to be bound by the <a href="/agreement.php">Terms of Use</a>!</small> <small>vxheaven.org aka vx.netlux.org</small></div>
<div style="margin-top: 2px; float: left;" class="adsapeu">
<script type="text/rocketscript">
<!--
var _acic={dataProvider:10};(function(){var e=document.createElement("script");e.type="text/javascript";e.async=true;e.src="//www.acint.net/aci.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)})()
//-->
</script>
</div>
<script data-rocketsrc="http://www.google-analytics.com/urchin.js" type="text/rocketscript"></script><script type="text/rocketscript">try { _uacct = "UA-590608-1"; urchinTracker(); } catch(err) {}</script>
<div style="display: none;"><a href="/lib/index.php?lang=de&amp;index=AV&amp;index=AV">de</a><a href="/lib/index.php?lang=en&amp;index=AV&amp;index=AV">en</a><a href="/lib/index.php?lang=es&amp;index=AV&amp;index=AV">es</a><a href="/lib/index.php?lang=it&amp;index=AV&amp;index=AV">it</a><a href="/lib/index.php?lang=fr&amp;index=AV&amp;index=AV">fr</a><a href="/lib/index.php?lang=pl&amp;index=AV&amp;index=AV">pl</a><a href="/lib/index.php?lang=ru&amp;index=AV&amp;index=AV">ru</a><a href="/lib/index.php?lang=ua&amp;index=AV&amp;index=AV">ua</a></div>
</body>
</html>
